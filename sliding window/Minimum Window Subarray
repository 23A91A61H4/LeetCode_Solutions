76. Minimum Window Subarray

Input:
    s = "ADOBECODEBANC", t = "ABC"
Output: 
    "BANC"
Code:
class Solution:
    def minWindow(self, s: str, t: str) -> str:
        mini = float('inf')
        l = 0
        f = 0
        hash = defaultdict(int)
        t_count = defaultdict(int)
        for ch in t:
            t_count[ch] += 1
        required = len(t)   
        for r in range(len(s)):
            if s[r] in t_count:
                if hash[s[r]] < t_count[s[r]]:
                    required -= 1
                hash[s[r]] += 1
            while required == 0:
                mini = min(r - l + 1, mini)
                if (r - l + 1) <= mini:
                    f = s[l:r+1]
                if s[l] in t_count:
                    hash[s[l]] -= 1
                    if hash[s[l]] < t_count[s[l]]:
                        required += 1
                l += 1
        if f == 0:
            return ""
        else:
            return f

Explanation:
      The minimum window substring "BANC" includes 'A', 'B', and 'C' from string t.
