239 Sliding Window Maximum 

Input:-
nums=[1,3,-1,-3,5,3,6,7]
k=3
output:
[3,3,5,5,6,7]

Code:-

from collections import deque
from typing import List

class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        q = deque()
        res = []

        for i in range(len(nums)):
            if q and q[0] <= i - k:
                q.popleft()
            while q and nums[q[-1]] < nums[i]:
                q.pop()
            q.append(i)
            if i >= k - 1:
                res.append(nums[q[0]])

        return res


Explanation:-
Window No.	Elements in Window	        Comparisons Done	                        Maximum	Result so far
1 (i=0)	    [1, 3, -1]	           1 → 3 (bigger) → -1 (smaller)	3	                    [3]
2 (i=1)	    [3, -1, -3]	           3 → -1 (smaller) → -3 (smaller)	3	                  [3, 3]
3 (i=2)	    [-1, -3, 5]	          -1 → -3 (smaller) → 5 (bigger)	5                     [3, 3, 5]
4 (i=3)	    [-3, 5, 3]	          -3 → 5 (bigger) → 3 (smaller)	5	                      [3, 3, 5, 5]
5 (i=4)	    [5, 3, 6]              5 → 3 (smaller) → 6 (bigger)	6	                      [3, 3, 5, 5, 6]
6 (i=5)	    [3, 6, 7]	             3 → 6 (bigger) → 7 (bigger)	7	                      [3, 3, 5, 5, 6, 7]


dqueue - removes from starting or ending. It can be used as stack or queue
